/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package src;

import java.util.ArrayList;

/**
 *
 * @author sebas
 */
public class FormAnalizador extends javax.swing.JFrame {

    public static AnaSint analizador;

    /**
     * Creates new form FormAnalizador
     */
    public FormAnalizador() {
        analizador = new AnaSint();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        anaSintTable = new javax.swing.JTable();
        analizeWord = new javax.swing.JButton();
        tableName = new javax.swing.JLabel();
        wordTF = new javax.swing.JTextField();
        introTitle = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultLex = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        resultSinPila = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        resultSinIntro = new javax.swing.JTextArea();
        rightSpace = new javax.swing.JLabel();
        downSpace = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        anaSintTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"E", "", null, null, null, "T E'", null, "T E'", "T E'", null},
                {"E'", "+ T E'", "- T E'", null, null, null, "λ", null, null, "λ"},
                {"T", null, null, null, null, "F T'", null, "F T'", "F T'", null},
                {"T'", "λ", "λ", "* F T'", "/ F T'", null, "λ", null, null, "λ"},
                {"F", null, null, null, null, "( E )", null, "num", "id", null}
            },
            new String [] {
                "", "+", "-", "*", "/", "(", ")", "num", "id", "$"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        anaSintTable.setFocusable(false);
        anaSintTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(anaSintTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 760, 140));

        analizeWord.setText("Analizar");
        analizeWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analizeWordActionPerformed(evt);
            }
        });
        getContentPane().add(analizeWord, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 210, -1, -1));

        tableName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tableName.setText("Tabla de análisis sintáctico LL1");
        getContentPane().add(tableName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 200, 20));
        getContentPane().add(wordTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 680, -1));

        introTitle.setText("Ingrese la palabra que quiere evaluar:");
        getContentPane().add(introTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        resultLex.setColumns(20);
        resultLex.setRows(5);
        jScrollPane2.setViewportView(resultLex);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 240, 110));

        resultSinPila.setColumns(20);
        resultSinPila.setRows(5);
        jScrollPane3.setViewportView(resultSinPila);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 240, 240, 110));

        resultSinIntro.setColumns(20);
        resultSinIntro.setRows(5);
        jScrollPane4.setViewportView(resultSinIntro);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 240, 240, 110));

        rightSpace.setText(" ");
        getContentPane().add(rightSpace, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 100, 20, -1));

        downSpace.setText(" ");
        getContentPane().add(downSpace, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 350, 50, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void analizeWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analizeWordActionPerformed
        String word = wordTF.getText();
        
        analizador.prepararAnalizador(anaSintTable);
        ArrayList<ParejaTV> splittedIntro = analizador.separarPalabra(word);        
        String[] resultadoDescendente = analizador.reconocerDescendente(splittedIntro);
        
        resultLex.setText(mostrarAnalisisLexico(splittedIntro));
        resultSinPila.setText("Pila:\n" + resultadoDescendente[0]);
        resultSinIntro.setText("Cadena:\n" + resultadoDescendente[1]);
    }//GEN-LAST:event_analizeWordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
 /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormAnalizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormAnalizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormAnalizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormAnalizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormAnalizador().setVisible(true);
            }
        });
    }

    public static String mostrarAnalisisLexico(ArrayList<ParejaTV> splittedIntro) {
        boolean validoLexico = true;

        String str = "";
        // Listar cada uno de los elementos de la palabra ingresada
        str += "Analisis léxico:\n";
        for (ParejaTV ptv : splittedIntro) {
            if (ptv.Tipo().equals("Error")) {
                validoLexico = false;
            }
            str += ptv.toString() + "\n";
        }

        // Comprobar si todos son elementos reconocidos y mostrar la respuesta
        if (validoLexico) {
            str += "Análisis léxico exitoso...\n";
            return str;
        } else {
            str += "Análisis léxico fallido...\n";
            return str;
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable anaSintTable;
    private javax.swing.JButton analizeWord;
    private javax.swing.JLabel downSpace;
    private javax.swing.JLabel introTitle;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea resultLex;
    private javax.swing.JTextArea resultSinIntro;
    private javax.swing.JTextArea resultSinPila;
    private javax.swing.JLabel rightSpace;
    private javax.swing.JLabel tableName;
    private javax.swing.JTextField wordTF;
    // End of variables declaration//GEN-END:variables
}
